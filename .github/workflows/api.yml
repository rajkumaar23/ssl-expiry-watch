name: api

on:
  push:
    branches: ["main", "revived"]
    paths-ignore:
      - 'web/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: log in to the container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: extract metadata (tags, labels) for docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: build and push docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          platforms: linux/arm64/v8,linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: "deploy to pi"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "run commands over ssh"
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port:  ${{ secrets.SSH_PORT }}
          script_stop: true
          script: |
            cd ${{ secrets.APP_DIR }}
            git pull
            cd ${{ secrets.APP_DIR }}/k8s/db
            kubectl apply -f namespace.yaml
            kubectl delete secret db-password -n tls-watch-db --ignore-not-found
            kubectl create secret generic db-password -n tls-watch-db --from-literal root-password="${{ secrets.DB_PASSWORD }}"
            kubectl delete configmap db-config -n tls-watch-db --ignore-not-found
            kubectl create configmap db-config -n tls-watch-db --from-literal db-name="${{ vars.DB_NAME }}"
            kubectl apply -f pvc.yaml
            kubectl apply -f deployment.yaml
            kubectl apply -f service.yaml
